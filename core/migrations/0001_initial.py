# Generated by Django 5.0.1 on 2025-01-14 14:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200)),
                ('endereco', models.CharField(max_length=500)),
                ('telefone', models.CharField(max_length=20)),
                ('whatsapp', models.CharField(max_length=20)),
                ('horario_funcionamento', models.CharField(blank=True, max_length=200, null=True)),
                ('evolution_instance_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('disconnected', 'Desconectado'), ('connected', 'Conectado'), ('pending_connection', 'Aguardando Conexão'), ('error', 'Erro')], default='disconnected', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Estabelecimento',
                'verbose_name_plural': 'Estabelecimentos',
                'db_table': 'estabelecimento',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_professionals', models.IntegerField()),
                ('features', models.JSONField(default=list)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support_whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('bot_ativo', models.BooleanField(default=True)),
                ('prompt_template', models.TextField(blank=True)),
                ('webhook_settings', models.JSONField(default=dict)),
                ('evolution_settings', models.JSONField(default=dict)),
                ('horario_atendimento', models.JSONField(default=dict)),
                ('status', models.CharField(default='disconnected', max_length=20)),
            ],
            options={
                'verbose_name': 'Configuração do Sistema',
                'verbose_name_plural': 'Configurações do Sistema',
            },
        ),
        migrations.CreateModel(
            name='SystemService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('default_duration', models.IntegerField(help_text='Duração padrão em minutos')),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('name', models.CharField(max_length=255, verbose_name='Nome')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('OWNER', 'Dono do Salão'), ('PROFESSIONAL', 'Profissional'), ('RECEPTIONIST', 'Recepcionista')], default='OWNER', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('custom_permissions', models.JSONField(blank=True, default=dict)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('estabelecimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.estabelecimento')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('details', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Calendario_Estabelecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField()),
                ('horario_abertura', models.TimeField()),
                ('horario_fechamento', models.TimeField()),
                ('estabelecimento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.estabelecimento')),
            ],
        ),
        migrations.CreateModel(
            name='Interacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_whatsapp', models.CharField(max_length=20)),
                ('mensagem', models.TextField()),
                ('resposta', models.TextField(blank=True, null=True)),
                ('tipo', models.CharField(max_length=20)),
                ('usado_llm', models.BooleanField(default=False)),
                ('tempo_resposta', models.FloatField(null=True)),
                ('is_lead', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('novo', 'Novo'), ('em_atendimento', 'Em Atendimento'), ('convertido', 'Convertido'), ('perdido', 'Perdido')], default='novo', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('estabelecimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.estabelecimento')),
            ],
            options={
                'db_table': 'core_interacao',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('source', models.CharField(choices=[('BOT1', 'Bot de Suporte'), ('BOT2', 'Bot do Salão'), ('SITE', 'Website')], max_length=10)),
                ('status', models.CharField(choices=[('NEW', 'Novo'), ('CONTACTED', 'Contatado'), ('CONVERTED', 'Convertido'), ('LOST', 'Perdido')], default='NEW', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_contact', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('salon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.estabelecimento')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('especialidade', models.CharField(max_length=100)),
                ('telefone', models.CharField(max_length=20)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='profissionais/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profissionais', to='core.estabelecimento')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profissional',
                'verbose_name_plural': 'Profissionais',
            },
        ),
        migrations.CreateModel(
            name='Horarios_Disponiveis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField()),
                ('horario_inicio', models.TimeField()),
                ('horario_fim', models.TimeField()),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='core.profissional')),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('whatsapp', models.CharField(max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('observacoes', models.TextField(blank=True, null=True)),
                ('historico_agendamentos', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('estabelecimento', models.ForeignKey(db_column='estabelecimento_id', on_delete=django.db.models.deletion.CASCADE, related_name='clientes', to='core.estabelecimento')),
                ('profissional_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='clientes', to='core.profissional')),
            ],
            options={
                'unique_together': {('estabelecimento', 'whatsapp')},
            },
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_servico', models.CharField(max_length=100)),
                ('duracao', models.IntegerField()),
                ('preco', models.DecimalField(decimal_places=2, max_digits=8)),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicos', to='core.estabelecimento')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_agendamento', models.DateField()),
                ('horario', models.TimeField()),
                ('status', models.CharField(max_length=50)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.cliente')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.profissional')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.servico')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('type', models.CharField(choices=[('income', 'Receita'), ('expense', 'Despesa')], max_length=10)),
                ('status', models.CharField(choices=[('completed', 'Concluído'), ('pending', 'Pendente'), ('cancelled', 'Cancelado')], max_length=10)),
                ('category', models.CharField(max_length=50)),
                ('salon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.estabelecimento')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='BotConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_cliente', models.CharField(max_length=20)),
                ('bot_ativo', models.BooleanField(default=True)),
                ('aceitar_nao_clientes', models.BooleanField(default=False)),
                ('mensagem_nao_cliente', models.TextField(blank=True, default='Olá! Para melhor atendê-lo, por favor, faça seu cadastro em nosso salão.')),
                ('ultima_atualizacao', models.DateTimeField(auto_now=True)),
                ('ignorar_grupos', models.BooleanField(default=True)),
                ('tempo_debounce', models.IntegerField(default=5)),
                ('horario_atendimento_inicio', models.TimeField(default='09:00')),
                ('horario_atendimento_fim', models.TimeField(default='18:00')),
                ('dias_atendimento', models.JSONField(default=list)),
                ('mensagem_fora_horario', models.TextField(blank=True, null=True)),
                ('mensagem_bot_desativado', models.TextField(blank=True, null=True)),
                ('estabelecimento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bot_config', to='core.estabelecimento')),
            ],
            options={
                'unique_together': {('estabelecimento', 'numero_cliente')},
            },
        ),
        migrations.CreateModel(
            name='SalonService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('active', models.BooleanField(default=True)),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.estabelecimento')),
                ('system_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.systemservice')),
            ],
            options={
                'unique_together': {('system_service', 'estabelecimento')},
            },
        ),
    ]
