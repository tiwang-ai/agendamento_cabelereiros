name: agendamento-salao
services:
  # Componente Django Backend
  - name: web
    github:
      branch: main
      repo: seu-usuario/seu-repo
    source_dir: '/'
    dockerfile_path: Dockerfile
    build_command: >
      mkdir -p /workspace/static && 
      pip install -r requirements.txt && 
      python manage.py collectstatic --noinput && 
      python manage.py makemigrations && 
      python manage.py migrate
    run_command: gunicorn agendamento_salao.wsgi:application --workers 4 --timeout 120 --keep-alive 5 --max-requests 1000
    instance_size_slug: basic-s
    http_port: 8000
    routes:
      - path: /static
        rewrite: /static
      - path: /api
        preserve_path_prefix: true
      - path: /django-admin
        preserve_path_prefix: true
    envs:
      - key: DJANGO_SETTINGS_MODULE
        value: agendamento_salao.settings
      - key: DEBUG
        value: 'False'
      - key: ALLOWED_HOSTS
        value: ${APP_DOMAIN}
      - key: DATABASE_URL
        value: ${DATABASE_URL}
      - key: REDIS_URL
        value: ${REDIS_URL}
      - key: BUILD_PHASE
        value: 'False'
      - key: DJANGO_MIGRATE
        value: 'True'
      - key: DJANGO_COLLECTSTATIC
        value: 'True'
      - key: CORS_ALLOWED_ORIGINS
        value: 'https://cabelereiro-ia-dtnxh.ondigitalocean.app'
      - key: STATIC_ROOT
        value: '/workspace/staticfiles'
      - key: STATIC_URL
        value: '/static/'
    depends_on:
      - name: database
      - name: redis
    health_check:
      http_path: /health/
      initial_delay_seconds: 60
      period_seconds: 30
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3

static_sites:
  # Frontend (React/Vite)
  - name: frontend
    github:
      branch: main
      repo: seu-usuario/seu-repo
    source_dir: 'frontend'
    build_command: npm run build
    output_dir: dist
    routes:
      - path: /
      - path: /login
        rewrite: /
      - path: /register
        rewrite: /
      - path: /admin/*
        rewrite: /
      - path: /dashboard/*
        rewrite: /
      - path: /*
        rewrite: /
    envs:
      - key: VITE_API_URL
        value: ${_self.HOSTNAME}/api
      - key: PORT
        value: '10000'

# Workers para processamento assÃ­ncrono
workers:
  # Worker para processamento de mensagens WhatsApp
  - name: whatsapp-worker
    github:
      branch: main
      repo: seu-usuario/seu-repo
    source_dir: '/'
    build_command: pip install -r requirements.txt
    run_command: >
      celery -A agendamento_salao worker 
      --pool=gevent 
      --concurrency=2
      -l info 
      -Q whatsapp 
      --without-heartbeat 
      --without-gossip
    instance_size_slug: basic-s
    instance_count: 1
    envs:
      - key: DJANGO_SETTINGS_MODULE
        value: agendamento_salao.settings
      - key: SECRET_KEY
        value: ${SECRET_KEY}
      - key: REDIS_URL
        value: ${REDIS_URL}
      - key: DATABASE_URL
        value: ${DATABASE_URL}
      - key: EVOLUTION_API_URL
        value: ${EVOLUTION_API_URL}
      - key: EVOLUTION_API_KEY
        value: ${EVOLUTION_API_KEY}
      - key: DEBUG
        value: 'False'
      - key: ALLOWED_HOSTS
        value: ${APP_DOMAIN}
    health_check:
      initial_delay_seconds: 60
      period_seconds: 60
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3

  # Worker para tarefas agendadas
  - name: scheduler
    github:
      branch: main
      repo: seu-usuario/seu-repo
    source_dir: '/'
    build_command: pip install -r requirements.txt
    run_command: celery -A agendamento_salao beat -l info
    instance_size_slug: basic-xs
    envs:
      - key: REDIS_URL
        value: ${REDIS_URL}
      - key: DATABASE_URL
        value: ${DATABASE_URL}
      - key: DJANGO_SETTINGS_MODULE
        value: agendamento_salao.settings

# Banco de dados PostgreSQL
databases:
  - engine: PG
    name: db
    num_nodes: 1
    size: db-s-dev-database
    version: '12'
    config:
      max_connections: 100
      shared_buffers: 256MB
      effective_cache_size: 768MB
      maintenance_work_mem: 64MB
      checkpoint_completion_target: 0.9
      wal_buffers: 7864kB
      default_statistics_target: 100
      random_page_cost: 1.1
      effective_io_concurrency: 200
      work_mem: 2621kB
      min_wal_size: 1GB
      max_wal_size: 4GB
